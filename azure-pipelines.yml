trigger:
- main

pool:
  vmImage: ubuntu-latest

resources:
 repositories:
   - repository: HISE
     type: github
     name: johnmannix/HISE
     endpoint: johnmannix
     ref: azure-pipelines

variables:
- name: project.folder
  value: tight-low-end
- name: plugin.filename
  value: 'Tight Low End'
- group: Secrets

stages:
- stage: MacOS
  jobs:
  - job: build
    displayName: 'Build Plugins'
    pool:
      vmImage: "macos-latest"
    steps:
    - checkout: self
    - checkout: HISE
    - task: DownloadPipelineArtifact@2
      displayName: 'Download HISE Artifacts'
      inputs:
        buildType: specific
        project: 'Mix Space'
        definition: 3
        buildVersionToDownload: latest
        artifact: MacOS_HISE
        path: $(Build.SourcesDirectory)/HISE/projects/standalone
    - task: Bash@3
      displayName: 'Build Plugins'
      inputs:
        targetType: 'filePath'
        filePath: '$(Build.SourcesDirectory)/HISE/ci/ci-build.sh'
      env:        
        SOURCES_DIRECTORY: $(Build.SourcesDirectory)
    - task: DownloadSecureFile@1
      name: certificates
      inputs:
        secureFile: 'DeveloperCertificates.cer'
    - task: InstallAppleCertificate@2
      inputs:
        certSecureFile: 'MannixSquared.p12'
        certPwd: '$(PrivateKeyPassword)'
        keychain: 'temp'
    - task: Bash@3
      displayName: 'Sign Plugins'
      inputs:
        targetType: 'filePath'
        filePath: '$(Build.SourcesDirectory)/HISE/ci/ci-sign.sh'
      env:
        SOURCES_DIRECTORY: $(Build.SourcesDirectory)
        CERTIFICATES: $(certificates.secureFilePath)
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.SourcesDirectory)/$(project.folder)/Binaries/Builds/MacOSX/build/Release'
        artifact: 'MacOSPlugins'
        publishLocation: 'pipeline'
  
- stage: Installer  
  jobs:
  - job: package
    displayName: 'Package Installer'
    pool:
      vmImage: "macos-latest"
    steps:
    - checkout: self
    - checkout: HISE
    - task: DownloadPipelineArtifact@2
      displayName: 'Download Plugin Artifacts'
      inputs:
        buildType: current
        artifact: MacOSPlugins
        path: '$(Build.SourcesDirectory)/$(project.folder)/Binaries/Builds/MacOSX/build/Release'
    - task: InstallAppleCertificate@2
      inputs:
        certSecureFile: 'InstallerCertificate.p12'
        certPwd: '$(PrivateKeyPassword)'
        keychain: 'temp'
    - task: DownloadSecureFile@1
      name: certificates
      inputs:
        secureFile: 'DeveloperCertificates.cer'
    - task: Bash@3
      displayName: 'Package'
      inputs:
        targetType: 'filePath'
        filePath: '$(Build.SourcesDirectory)/HISE/ci/ci-build-installer.sh'
      env:
        ARTIFACTS_DIRECTORY: '$(Build.SourcesDirectory)/$(project.folder)/Binaries/Builds/MacOSX/build/Release'
        APPLE_ID: $(AppleId)
        TEAM_ID: $(TeamId)
        NOTARYTOOL_PASSWORD: $(NotaryToolPassword)
        SOURCES_DIRECTORY: $(Build.SourcesDirectory)
        CERTIFICATES: $(certificates.secureFilePath)
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.SourcesDirectory)/HISE/ci/$(plugin.filename).dmg'
        artifact: 'MacInstaller'
        publishLocation: 'pipeline'

- stage: Windows
  jobs:
  - job: build
    displayName: 'Build Plugins'
    pool:
      vmImage: "windows-latest"
    steps:
    - checkout: self
    - checkout: HISE
    - task: DownloadPipelineArtifact@2
      displayName: 'Download HISE Artifacts'
      inputs:
        buildType: specific
        project: 'Mix Space'
        definition: 3
        buildVersionToDownload: latest
        artifact: Windows_HISE
        path: '$(Build.SourcesDirectory)/HISE/projects/standalone'        
    - task: BatchScript@1
      inputs:
        filename: '$(Build.SourcesDirectory)/HISE/ci/ci-build.bat'
      env:
        SOURCES_DIRECTORY: $(Build.SourcesDirectory)
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)/$(project.folder)/Binaries/Compiled/VST3/$(plugin.filename).vst3'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/WindowsVST.zip'
        replaceExistingArchive: true
    - task: PublishPipelineArtifact@1
      enabled: true
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/WindowsVST.zip'
        artifact: 'WindowsPlugins'
        publishLocation: 'pipeline'

- stage: Release
  jobs:
  - job: release
    displayName: 'Release to GitHub'
    pool:
      vmImage: "ubuntu-latest"
    steps:
      - checkout: none
      - task: DownloadPipelineArtifact@2
        displayName: 'Download Mac Installer'
        inputs:
          buildType: current
          artifactName: MacInstaller
      - task: DownloadPipelineArtifact@2
        displayName: 'Download Windows VST'
        inputs:
          buildType: current
          artifactName: WindowsPlugins
      - task: GitHubRelease@1
        inputs:
          gitHubConnection: 'johnmannix'
          repositoryName: 'mannixsquared/$(project.folder)'
          action: 'create'
          target: '$(Build.SourceVersion)'
          tagSource: 'gitTag'
          tagPattern: 'v*.*'
          releaseNotesSource: 'inline'
          isDraft: true
          addChangeLog: false